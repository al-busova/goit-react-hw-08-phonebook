{"version":3,"file":"static/js/38.9f14813e.chunk.js","mappings":"+NAsEA,UAxDc,WACZ,IAAMA,GAAUC,EAAAA,EAAAA,MACVC,GAAiBD,EAAAA,EAAAA,MACjBE,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAEXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAYxC,OACE,2BACE,SAAC,KAAD,CACEI,cAZgB,CACpBL,MAAO,GACPE,SAAU,IAWNI,iBAAkBT,EAClBU,SATe,SAACC,EAAQC,GAC5Bd,GAASe,EAAAA,EAAAA,IAAM,CAAEV,MAAOQ,EAAOR,MAAOE,SAAUM,EAAON,YACvDO,EAAQE,WACT,EAGG,UAKE,UAAC,KAAD,CAAYC,aAAa,MAAzB,WACE,UAAC,KAAD,CAAOC,QAASxB,EAAhB,WACE,2CACA,SAAC,KAAD,CACEyB,KAAK,OACLC,KAAK,QACLC,GAAI3B,EACJ4B,YAAY,yBAGhB,SAAC,IAAD,CAAWF,KAAK,QAAQG,UAAU,OAClC,UAAC,KAAD,CAAOL,QAAStB,EAAhB,WACE,wCACA,SAAC,KAAD,CACEuB,KAAK,WACLC,KAAK,WACLC,GAAIzB,EACJ0B,YAAY,uBAGhB,SAAC,IAAD,CAAWF,KAAK,WAAWG,UAAU,OACrC,SAAC,KAAD,CAAQJ,KAAK,SAAb,SACGtB,GAAY,8CAAkB,gDAM1C,C","sources":["pages/Login.jsx"],"sourcesContent":["import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { selectIsLoadingAuth } from 'redux/auth/selectorsAuth';\nimport {\n  Button,\n  FormFormik,\n  InputFormik,\n  Label,\n  ErrorText,\n} from 'components/commonStyles';\n\nconst Login = () => {\n  const loginId = nanoid();\n  const passwordIdLogg = nanoid();\n  const isLoading = useSelector(selectIsLoadingAuth);\n  const dispatch = useDispatch();\n\n  const schema = yup.object().shape({\n    email: yup.string().required(),\n    password: yup.string().min(7).max(16).required(),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(logIn({ email: values.email, password: values.password }));\n    actions.resetForm();\n  };\n  return (\n    <main>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormFormik autoComplete=\"off\">\n          <Label htmlFor={loginId}>\n            <span>Login/Email</span>\n            <InputFormik\n              type=\"text\"\n              name=\"email\"\n              id={loginId}\n              placeholder=\"Enter your login\"\n            />\n          </Label>\n          <ErrorText name=\"email\" component=\"p\" />\n          <Label htmlFor={passwordIdLogg}>\n            <span>Password</span>\n            <InputFormik\n              type=\"password\"\n              name=\"password\"\n              id={passwordIdLogg}\n              placeholder=\"Enter password\"\n            />\n          </Label>\n          <ErrorText name=\"password\" component=\"p\" />\n          <Button type=\"submit\">\n            {isLoading ? <>Loading...</> : <>Login</>}\n          </Button>\n        </FormFormik>\n      </Formik>\n    </main>\n  );\n};\nexport default Login;\n"],"names":["loginId","nanoid","passwordIdLogg","isLoading","useSelector","selectIsLoadingAuth","dispatch","useDispatch","schema","yup","shape","email","required","password","min","max","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","autoComplete","htmlFor","type","name","id","placeholder","component"],"sourceRoot":""}