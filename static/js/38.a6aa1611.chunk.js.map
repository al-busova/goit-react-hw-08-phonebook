{"version":3,"file":"static/js/38.a6aa1611.chunk.js","mappings":"qNAoDA,UA7Ce,WACb,IAAMA,GAAUC,EAAAA,EAAAA,MACPC,GAAiBD,EAAAA,EAAAA,MACjBE,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAAWC,EAAAA,EAAAA,MAEXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAYxC,OACE,2BACE,SAAC,KAAD,CACEI,cAZgB,CACpBL,MAAO,GACPE,SAAU,IAWNI,iBAAkBT,EAClBU,SATe,SAACC,EAAQC,GAC5Bd,GAASe,EAAAA,EAAAA,IAAM,CAAEV,MAAOQ,EAAOR,MAAOE,SAAUM,EAAON,YACvDO,EAAQE,WACT,EAGG,UAKE,UAAC,KAAD,CAAMC,aAAa,MAAnB,WACE,mBAAOC,QAASxB,EAAhB,yBAEE,SAAC,KAAD,CAAOyB,KAAK,OAAOC,KAAK,QAAQC,GAAI3B,EAAS4B,YAAY,sBACzD,SAAC,KAAD,CAAcF,KAAK,QAAQG,UAAU,YAEvC,mBAAOL,QAAStB,EAAhB,sBAEE,SAAC,KAAD,CAAOuB,KAAK,WAAWC,KAAK,WAAWC,GAAIzB,EAAgB0B,YAAY,oBACvE,SAAC,KAAD,CAAcF,KAAK,WAAWG,UAAU,YAG1C,mBAAQJ,KAAK,SAAb,SAAuBtB,GAAY,8CAAkB,gDAK9D,C","sources":["pages/Login.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { selectIsLoadingAuth } from 'redux/auth/selectorsAuth';\n\n const Login = () => {\n  const loginId = nanoid();\n     const passwordIdLogg = nanoid();\n     const isLoading = useSelector(selectIsLoadingAuth);\n  const dispatch = useDispatch();\n\n  const schema = yup.object().shape({\n    email: yup.string().required(),\n    password: yup.string().min(7).max(16).required(),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(logIn({ email: values.email, password: values.password }));\n    actions.resetForm();\n  };\n  return (\n    <main>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <label htmlFor={loginId}>\n            Login/Email\n            <Field type=\"text\" name=\"email\" id={loginId} placeholder='enter your login'/>\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </label>\n          <label htmlFor={passwordIdLogg}>\n            Password\n            <Field type=\"password\" name=\"password\" id={passwordIdLogg} placeholder='enter password'/>\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </label>\n\n          <button type=\"submit\">{isLoading ? <>Loading...</> : <>Go in</>}</button>\n        </Form>\n      </Formik>\n    </main>\n  );\n};\nexport default Login;"],"names":["loginId","nanoid","passwordIdLogg","isLoading","useSelector","selectIsLoadingAuth","dispatch","useDispatch","schema","yup","shape","email","required","password","min","max","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","autoComplete","htmlFor","type","name","id","placeholder","component"],"sourceRoot":""}